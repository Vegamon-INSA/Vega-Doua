import java.util.ArrayList;
import javax.swing.*;
import java.io.*;
import java.awt.Color;
import java.awt.event.*;
import java.util.ArrayList;
 
public class Jeu extends JFrame {
	
	public int numeroCarte;// les cartes sont dans l'ordre avec carte avec chemin numérotées de 1 à n et maisons dans les cartes cehmin numérotés 10 , 11, 12 etc avec nombre croissant du bas vers le haut
	public int[][] TableauCarte = new int[25][25]; // Tableau contenant les infos sur la carte : rouge=0 (interdit), transparant=1(Chemin), rose= 2 (interaction sans combat), bleu=3 (soin des pokemons), violet=4 (entree ou sortie batiment), jaune =5 (trefle), lac=6 (ils sont laissés transparants sur les cadriages mais bien mettre 6 et pas 1)
	public int xDepart; //coordonnées x et y de l'arrivée sur une nouvelle map ou maison (coordonnées de la porte d'entrée)
	public int yDepart;
	public String imageFond; // Image de fond des cartes

	public Jeu() {//création de l'unique Jframe
			this.setTitle("Vegamon La Doua");
			this.setSize(600,620);
			this.setLocationRelativeTo(null);
			// Pour placer la fenêtre au centre de l'écran
			this.setLayout(null);
			// Pour permettre la fermeture de la fenêtre lors de l'appui sur la croix rouge
			this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

	 }		
	
	public static void main(String[] args){
		
// String nom, double attaque, double esquive, int PVmax, int type, int XP, Attaques attaque1, Attaques attaque2, Attaques attaque3, Attaques attaque4){
        Attaques attaque1 = new Attaques("Racineries", 2, 10,0,0); //Meloche (1 à 4)
        Attaques attaque2 = new Attaques("Poudrelles", 1, 10,0,0);
        Attaques attaque3 = new Attaques("Lightning", 4, 10,0,0);
        Attaques attaque4 = new Attaques("Abysses", 3, 10,0,0);
        Attaques attaque5 = new Attaques("Bec Aqua", 3, 12,0,0);   //Pour le moment seul le type est utile !!
        Attaques attaque6 = new Attaques("Foudre", 4, 12,0,0);
        Attaques attaque7 = new Attaques("Incendie", 1, 12,0,0);
        Attaques attaque8 = new Attaques("Tsunami",3, 12,0,0);
        Attaques attaque9 = new Attaques("Fouetifeuille", 2, 12,0,0);
        Attaques attaque10 = new Attaques("Jet d'eau", 3, 10,0,0);
        Attaques attaque11 = new Attaques("Electron", 4, 12,0,0);
        Attaques attaque12 = new Attaques("Coup de jus", 4, 12,0,0);
        Attaques attaque13 = new Attaques("Ebullition", 1, 12,0,0);
        Attaques attaque14 = new Attaques("Liane", 2, 12,0,0);
        Attaques attaque15 = new Attaques("Brulure", 1, 12,0,0);
        Attaques attaque16 = new Attaques("Plante carnivore", 2, 12,0,0);
        
        ArrayList<VEGAMONS> pokedex = new ArrayList<VEGAMONS>() ;
        
        VEGAMONS v1 = new VEGAMONS ("Meloche", 45, 50, 0.2, 40, 4, 1, attaque2, attaque1, attaque4, attaque3) ;
        VEGAMONS v2 = new VEGAMONS ("Aigleau", 50, 37, 0.24, 25, 3, 1, attaque5, attaque8, attaque10, attaque4) ;
        VEGAMONS v3 = new VEGAMONS ("Murenss", 35, 40, 0.2, 45, 4, 1, attaque6, attaque11, attaque3, attaque12) ;
        VEGAMONS v4 = new VEGAMONS ("Sunfure", 50, 35, 0.2, 35, 1, 1, attaque7, attaque2, attaque13, attaque15) ;
        VEGAMONS v5 = new VEGAMONS ("Anemoniac", 40, 35, 0.2, 30, 3, 1, attaque8, attaque4, attaque5, attaque10) ;
        VEGAMONS v6 = new VEGAMONS ("Pandalame", 45, 45, 0.16, 45, 2, 1, attaque9, attaque1, attaque14, attaque16) ;
        pokedex.add(v1);
        pokedex.add(v2);
        pokedex.add(v3);
        pokedex.add(v4);
        pokedex.add(v5);
        pokedex.add(v6);

		Jeu Sessionjeu = new Jeu();

		Sessionjeu.numeroCarte=1;
		//FenetreCombat MafenetreCombat = new FenetreCombat(pokedex,JFramePrincipal);
	
		int Taturne [][] = { {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,2,2,1,1,1,1,0},{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,0},{0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,2,2,1,1,1,1,0},{0,3,3,3,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0},{0,3,3,3,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0},{0,3,3,3,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,1,1,4,4,4,4,4,1,1,1,1,1,1,1,1,1,1,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} };
		int lafeyssine [][] = { {0,0,2,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,0,0,0,0,0,0,2,1,1,1,1,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,1,0,0,0,0,0,2,1,1,1,1,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,4,0,0,0,0,0,0},{0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,4,0,0,0,0,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,2,2,0,0,0,4,0,0,0,0,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,2,2,0,0,0,4,0,0,0,0,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0},{0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0},{0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
		int Travee1 [][] = {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,0,0},{0,0,2,2,5,5,5,5,5,5,5,5,1,1,1,1,1,1,6,6,6,6,4,0,0},{0,0,1,1,1,5,5,5,1,1,5,1,1,1,1,1,1,1,6,6,6,6,1,0,0},{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0},{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,5,0,0},{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,5,0,0},{0,0,0,1,1,1,1,1,1,1,5,5,5,5,5,5,5,1,1,5,5,5,5,0,0},{0,0,0,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0},{0,0,0,0,0,0,0,0,0,0,0,5,1,1,5,5,5,5,1,6,6,6,1,0,0},{0,0,0,0,0,0,0,0,0,0,0,1,1,1,5,5,5,5,6,6,6,6,1,0,0},{0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,5,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,5,0,0,0,0,0,0,0,0,0},{0,0,0,2,5,5,5,5,5,5,1,1,1,1,5,5,0,0,0,0,0,0,0,0,0},{0,0,0,2,5,5,5,5,5,5,1,1,1,1,5,5,0,0,0,0,0,0,0,0,0},{0,0,0,1,5,5,5,5,5,1,6,6,6,1,1,5,5,5,5,1,1,1,2,0,0},{0,0,0,1,1,5,5,5,5,6,6,6,6,1,1,1,1,1,1,1,1,1,1,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0},{0,0,1,1,5,5,5,5,5,1,1,1,1,1,1,1,1,5,5,5,5,5,5,0,0},{0,0,1,2,5,5,5,5,5,1,1,1,1,1,1,1,1,5,5,5,5,5,5,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0},{0,0,0,1,1,1,1,1,5,5,5,1,1,1,1,1,5,5,5,5,5,5,5,0,0},{0,0,1,4,1,1,1,1,1,5,1,1,1,1,1,5,5,5,5,5,5,5,5,0,0},{0,0,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};

		switch(Sessionjeu.numeroCarte) {
		  case 11:{
			Sessionjeu.TableauCarte=Taturne;
			Sessionjeu.xDepart=2;
			Sessionjeu.yDepart=2;
			Sessionjeu.imageFond="Images/Route1-Travees/travees1.png";
			break;
		}
		  case 1:{
			Sessionjeu.TableauCarte=Travee1;
			Sessionjeu.xDepart=2;
			Sessionjeu.yDepart=2;
			Sessionjeu.imageFond="Images/Route1-Travees/travees1.png";
			break;
			}
		  default:
			Sessionjeu.TableauCarte=null;
		}
		
		
		//sauvegarde du jeu 
		
		//teste si sauvegarde existe
		final String chemin = System.getProperty("user.dir");
		String NomFichier = "sauvegarde.txt";
		String cheminfichier = chemin + File.separator + NomFichier;

		if(new File(cheminfichier).isFile()) {//si le fichier sauvegarde existe
				//lecture du contenu du fichier sauvegarde 			
				try(FileReader fileReader = new FileReader(cheminfichier)) {
				int ch = fileReader.read();
				while(ch != -1) {
					System.out.print((char)ch);
					ch = fileReader.read();
				}
			} catch (FileNotFoundException e) {
				// Gestion des exceptions
			} catch (IOException e) {
				// Gestion des exceptions
			}  
		}
		else {//si le fichier sauvegarde n'existe pas	
			try(FileWriter fileWriter = new FileWriter(cheminfichier)) {//Creation du fichier sauvegarde
				String ContenuDuFichier = Sessionjeu.numeroCarte+"\n";
				fileWriter.write(ContenuDuFichier);
			} catch (IOException e) {
				// Gestion des exceptions
			}
		}	
		//Fin sauvegarde

		Accueil ecranAccueil= new Accueil(pokedex,Sessionjeu);
		
   }
}
